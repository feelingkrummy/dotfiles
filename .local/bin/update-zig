#!/usr/bin/env python3

import requests
import json
import os
import tarfile
import shutil

def download_tarball( download_link, output_filename ):
    tarball = requests.get( download_link, stream=True)
    with open( output_filename, 'wb' ) as fd:
        for chunk in tarball.iter_content(chunk_size=256):
            fd.write(chunk)

def extract_tarball( tarball_filename ):
    tarball = tarfile.open(tarball_filename)
    tarball.extractall("/tmp")
    tarball.close()


install_dir = "/home/kameron/.local/bin/zig"
zig_exists = os.path.exists(install_dir)
output_file = "/tmp/zig-download.tar.xz"
version_file = install_dir+"/version.txt"

response = requests.get("https://ziglang.org/download/index.json")
zig_json = response.json()

download_link = zig_json["master"]["x86_64-linux"]["tarball"]
extracted_dir_name = download_link.split('/')[-1].split(".tar.xz")[0] 

if zig_exists :
    try:
        with open(version_file, "r") as version_fd:
            installed_version = version_fd.readline()
            current_version = zig_json["master"]["version"]
            if installed_version != current_version:
                print("Zig version out of date, starting update")
                zig_needs_updated = True
            else:
                print("Zig up to date! Nothing to do")
                zig_needs_updated = False 
    except OSError:
        print("Can't find version file, proceeding with download")
        zig_needs_updated = True
    if zig_needs_updated :
        download_tarball( download_link, output_file )
        print("Downloaded tarball")
        extract_tarball( output_file )
        print("Tarball extracted")
        shutil.copytree( "/tmp/"+extracted_dir_name, install_dir, symlinks=True, dirs_exist_ok=True )
        print("Tarball copied")
        with open(version_file, "w") as version_fd:
            version_fd.write(zig_json["master"]["version"])
        print("Zig updated!")
    else:
        pass
else:
    print("No zig found. Downloading latest");
    download_tarball( download_link, output_file )
    print("Downloaded tarball")
    extract_tarball( output_file )
    print("Tarball extracted")
    shutil.copytree( "/tmp/"+extracted_dir_name, install_dir, symlinks=True, dirs_exist_ok=True )
    print("Tarball copied")
    with open(version_file, "w") as version_fd:
        version_fd.write(zig_json["master"]["version"])
    print("Zig updated!")

